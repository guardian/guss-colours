/**
 * Get a color from initial color palette
 * 
 * @param {String} $name                    - color to get
 * @param {Map}    $palette ($guss-colours) - palette
 *
 * @requires {variable} guss-colours
 *
 * @return {Color | Null}
 */
@function guss-colour($name, $palette: $guss-colours) {
    @return map-get($palette, $name);
}

/**
 * Generate a color palette
 *
 * @param {Map}    $palette  ($guss-colours) - palette
 * @param {String} $prefix   (c-)            - prefix
 * @param {String} $property (color)         - property
 *
 * @requires {variable} guss-colours
 */
@mixin guss-generate-colour-classes($palette: $guss-colours, $prefix: c-, $property: color) {
    @each $name, $color in $palette {
        .#{$prefix}#{$name} {
            #{$property}: $color;
        }
    }
}
